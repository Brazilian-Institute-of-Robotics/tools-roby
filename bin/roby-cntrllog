#! /usr/bin/ruby
#
require 'optparse'

do_cumulative = false
parser = OptionParser.new do |opts|
    opts.banner = "roby-cntrllog [options]Â [modules]\nDisplays control timing logs which are saved by the :log option of Control::run"
    opts.separator ""
    opts.on("-v", "--cumulative", "display timings w.r.t. cycle beginning instead of durations") do
	do_cumulative = true
    end
    opts.on("--help", "this help") do 
	puts opts
	puts
	exit
    end
end
parser.parse! ARGV

def timeval_to_s(t)
    '%02i:%02i:%02i.%03i' % [t.tv_sec / 3600, t.tv_sec % 3600 / 60, t.tv_sec % 60, t.tv_usec / 1000]
end

REF_TIMING = :start
ALL_TIMINGS = [ :garbage_mark, :server, :events, :ruby_gc, :end, :pass, :sleep ]

if ARGV.empty?
    STDERR.puts "no file given on command line, reading stdin"
end
begin
    loop do
	timings = Marshal.load(ARGF)
	ref = timings.delete(REF_TIMING)

	timings = ALL_TIMINGS.map do |name|
	    timings[name]
	end

	result = [timeval_to_s(ref)]
	if do_cumulative
	    timings.inject(0) do |last, t| 
		if t 
		    result << (t - ref) 
		    t
		else 
		    last
		end
	    end
	else
	    timings.inject(ref) do|last, t| 
		if t
		    result << (t - last)
		    t
		else
		    last
		end
	    end
	end

	puts result.join("  ")
    end
rescue EOFError
end
